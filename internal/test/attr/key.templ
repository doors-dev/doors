package attr

import (
	"context"
	"fmt"
	"github.com/doors-dev/doors"
	"github.com/doors-dev/doors/internal/test"
)

type keyFragment struct {
	r *test.Reporter
	test.NoBeam
}

templ (f *keyFragment) Render() {
	@doors.AKeyDown{
		On: func(ctx context.Context, r doors.REvent[doors.KeyboardEvent]) bool {
			f.r.Update(ctx, 0, r.Event().Key)
			f.r.Update(ctx, 1, "down")
			return false
		},
	}
	@doors.AKeyUp{
		On: func(ctx context.Context, r doors.REvent[doors.KeyboardEvent]) bool {
			f.r.Update(ctx, 2, r.Event().Key)
			f.r.Update(ctx, 3, "up")
			if r.Event().ShiftKey {
				f.r.Update(ctx, 4, fmt.Sprint(r.Event().ShiftKey))
			}
			if r.Event().CtrlKey {
				f.r.Update(ctx, 5, fmt.Sprint(r.Event().CtrlKey))
			}
			if r.Event().AltKey {
				f.r.Update(ctx, 6, fmt.Sprint(r.Event().AltKey))
			}
			return false
		},
	}
	<input type="text" id="input" placeholder=""/>
	<hr/>
	{{ f.r.Update(ctx, 0, "") }}
	{{ f.r.Update(ctx, 1, "") }}
	{{ f.r.Update(ctx, 2, "") }}
	{{ f.r.Update(ctx, 3, "") }}
	{{ f.r.Update(ctx, 4, "") }}
	{{ f.r.Update(ctx, 5, "") }}
	{{ f.r.Update(ctx, 6, "") }}
	@f.r.Render()
}

