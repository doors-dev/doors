// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package attr

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"context"
	"crypto/sha256"
	"encoding/hex"
	"fmt"
	"github.com/doors-dev/doors"
	"github.com/doors-dev/doors/internal/test"
	"io"
)

type formFragment struct {
	test.NoBeam
	r   *test.Reporter
	raw bool
}

func (f *formFragment) Render() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		f.r.Update(ctx, 0, "init")
		templ_7745c5c3_Err = f.r.Render().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if f.raw {
			templ_7745c5c3_Err = f.form(f.submitRaw()).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = f.form(f.submitSimple()).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

func (f *formFragment) submitSimple() doors.Attr {
	return doors.ASubmit[formData]{
		On: func(ctx context.Context, r doors.RForm[formData]) bool {
			f.r.Update(ctx, 0, r.Data().Name)
			f.r.Update(ctx, 1, r.Data().Email)
			f.r.Update(ctx, 2, fmt.Sprint(r.Data().Age))
			f.r.Update(ctx, 3, r.Data().Subscribe)
			return true
		},
	}
}
func (f *formFragment) submitRaw() doors.Attr {
	return doors.ARawSubmit{
		On: func(ctx context.Context, rf doors.RRawForm) bool {
			form, _ := rf.ParseForm(10_000_000)
			fileHeader := form.Form().File["attachment"][0]
			file, err := fileHeader.Open()
			if err != nil {
				return true
			}
			defer file.Close()
			hasher := sha256.New()
			if _, err := io.Copy(hasher, file); err != nil {
				return true
			}
			hash := hex.EncodeToString(hasher.Sum(nil))
			f.r.Update(ctx, 0, hash)
			return true
		},
	}
}

type formData struct {
	Name      string `form:"name"`
	Email     string `form:"email"`
	Age       int    `form:"age"`
	Subscribe string `form:"subscribe"`
}

func (f *formFragment) form(a doors.Attr) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = a.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<form><input type=\"text\" id=\"name\" name=\"name\"> <input type=\"email\" id=\"email\" name=\"email\"> <input type=\"number\" id=\"age\" name=\"age\" min=\"0\"> <input type=\"checkbox\" id=\"subscribe\" name=\"subscribe\" value=\"on\"> <input type=\"file\" id=\"file\" name=\"attachment\"> <button id=\"submit\" type=\"submit\">Submit</button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
